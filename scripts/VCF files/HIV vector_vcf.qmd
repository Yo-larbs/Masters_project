---
title: "VCF_call"
format: html
editor: visual
---

## loading

```{r}
# If packrat is not installed, install it from CRAN
if (!requireNamespace("packrat", quietly = TRUE)) {
  install.packages("packrat")
}
library(packrat)

# Check if a packrat project is already initialized
if (!file.exists("packrat/packrat.lock")) {
  # Initialize packrat to create an isolated project environment
  packrat::init(options = list(auto.snapshot = TRUE))
  message("Packrat initialized and snapshot created.")
} else {
  # Restore the previous packrat environment
  packrat::restore()
  message("Packrat environment restored from lockfile.")
}

```

```{r}
remove.packages("dplyr")
install.packages("dplyr",dependencies=TRUE)==
```

```{r}
#if (!require("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")


#BiocManager::install('org.Hs.eg.db')
#BiocManager::install('BSgenome.Hsapiens.UCSC.hg38')
#BiocManager::install("VariantAnnotation")
#BiocManager::install("GenomicRanges")
#BiocManager::install('TxDb.Hsapiens.UCSC.hg38.refGene')
install.packages("packrat")
library(utils)
library(GenomicRanges)
library(org.Hs.eg.db)
library(TxDb.Hsapiens.UCSC.hg38.refGene)
library(VariantAnnotation)
library(BSgenome.Hsapiens.UCSC.hg38)
library(dplyr)
library(ggplot2)
library(packrat)
```

```{r}
setwd("../..")
Susceptible_vector_cells_List =list.files(path = "inputs/VCF/vector/Susceptible",full.names = T)
Resistant_vector_cells_list=list.files(path = "inputs/VCF/vector/Resistant",full.names = T)
```

```{r}
join_VCF = function(x){
  list= lapply(x, function(file) {
    vc_obj=readVcf(file,"hg38")
    gr=rowRanges(vc_obj)
    cell_line <- substr(basename(file), 1, 6)
    mcols(gr)$CellLine=cell_line
    return(gr)
    })
  joint=do.call(c,list)
  return((joint))
}
```

```{r}
Susceptible_vector_cells_VCF=join_VCF(Susceptible_vector_cells_List)
Resistant_vector_cells_VCF=join_VCF(Resistant_vector_cells_list)
```


```{r}
expandGR <- function(gr) {
  # Check that the ALT column exists
  if (!"ALT" %in% names(mcols(gr))) {
    stop("No ALT column found in the GRanges object.")
  }
  
  # Get the number of ALT alleles for each variant
  alt_counts <- elementNROWS(gr$ALT)
  
  # Optionally, filter out variants with no ALT alleles
  gr <- gr[alt_counts > 0]
  alt_counts <- elementNROWS(gr$ALT)
  
  # Expand the GRanges object: each row is repeated as many times as ALT alleles
  gr_expanded <- gr[rep(seq_along(gr), alt_counts)]
  
  # Replace the ALT column with the unlisted ALT values
  gr_expanded$ALT <- unlist(gr$ALT)
  
  # Check that the lengths match
  if (length(gr_expanded) != sum(alt_counts)) {
    warning("Length mismatch: Expanded GRanges does not equal the total number of ALT alleles.")
  }
  
  return(gr_expanded)
}
```

```{r}
#head(Susceptible_vector_cells_VCF,30)
#head(Resistant_vector_cells_VCF)
Susceptible_vector_cells_VCF_expanded=expandGR(Susceptible_vector_cells_VCF)
Resistant_vector_cells_VCF_expanded=expandGR(Resistant_vector_cells_VCF)

```

```{r}
#common_variants=GenomicRanges::match((Susceptible_vector_cells_VCF_expanded),(Resistant_vector_cells_VCF_expanded))
#common_variants2=GenomicRanges::match((Resistant_vector_cells_VCF_expanded),(Susceptible_vector_cells_VCF_expanded))
Susceptible_vector_cells_VCF_nonoverlaps <- Susceptible_vector_cells_VCF_expanded #[is.na(common_variants)]
Resistant_vector_cells_VCF_nonoverlaps=Resistant_vector_cells_VCF_expanded #[is.na(common_variants2)]
```

```{r}
Resistant_vector_cells_VCF=0
Susceptible_vector_cells_VCF=0
Resistant_vector_cells_VCF_expanded=0
Susceptible_vector_cells_VCF_expanded=0

```

```{r}
Susceptible_vector_cells_VCF_nonoverlaps[ranges(Susceptible_vector_cells_VCF_nonoverlaps)=='78079609']
```

```{r}
Resistant_vector_cells_VCF_nonoverlaps[ranges(Resistant_vector_cells_VCF_nonoverlaps)=='78079609']
```

```{r}
txdb=TxDb.Hsapiens.UCSC.hg38.refGene

intersecting_chrom=GenomicRanges::intersect(seqlevels(Susceptible_vector_cells_VCF_nonoverlaps),seqlevels(BSgenome.Hsapiens.UCSC.hg38))


# Update x to keep only those common seqlevels
Susceptible_vector_cells_VCF_nonoverlaps_2 <- keepSeqlevels(Susceptible_vector_cells_VCF_nonoverlaps, intersecting_chrom,pruning.mode = "coarse")

```


```{r}
intersecting_chrom=intersect(seqlevels(Resistant_vector_cells_VCF_nonoverlaps),seqlevels(BSgenome.Hsapiens.UCSC.hg38))


# Update x to keep only those common seqlevels
Resistant_vector_cells_VCF_nonoverlaps_2 <- keepSeqlevels(Resistant_vector_cells_VCF_nonoverlaps, intersecting_chrom,pruning.mode = "coarse")

```

```{r}
Resistant_vector_cells_VCF_nonoverlaps=0
Susceptible_vector_cells_VCF_nonoverlaps=0
```

```{r}
Hsapiens=(BSgenome.Hsapiens.UCSC.hg38)
```

```{r}

#expanded_VCF=expandGR(Resistant_vector_cells_VCF_nonoverlaps_2)

# Extract all ALT alleles correctly
var_alleles <- Resistant_vector_cells_VCF_nonoverlaps_2$ALT
Resistant_vector_protein_VCF= predictCoding(query=trim(Resistant_vector_cells_VCF_nonoverlaps_2),subject = txdb,seqSource=BSgenome.Hsapiens.UCSC.hg38,varAllele = var_alleles)
```

```{r}
#expanded_VCF=expandGR(Susceptible_vector_cells_VCF_nonoverlaps_2)
# Extract all ALT alleles correctly
var_alleles <- Susceptible_vector_cells_VCF_nonoverlaps_2$ALT
Susceptible_vector_protein_VCF=predictCoding(query = Susceptible_vector_cells_VCF_nonoverlaps_2,subject = txdb,seqSource=BSgenome.Hsapiens.UCSC.hg38,varAllele = var_alleles)
```

```{r}
Susceptible_vector_protein_VCF=Susceptible_vector_protein_VCF[!Susceptible_vector_protein_VCF$ALT=='']
```

```{r}
Resistant_vector_protein_VCF=Resistant_vector_protein_VCF[!Resistant_vector_protein_VCF$ALT=='']
```

```{r}
Susceptible_vector_protein_VCF=Susceptible_vector_protein_VCF[!Susceptible_vector_protein_VCF$ALT=='']
```

```{r}
install.packages('annovarR')
library(annovarR)

```

```{r}
convertToAvinput <- function(gr, output_file) {
  df <- data.frame(
    chr = (seqnames(gr)),
    start = start(gr),
    end = end(gr),
    ref = (mcols(gr)$REF),
    alt = (mcols(gr)$ALT),
    cell_line=(gr)$CellLine
  )
  #df=df[,c(1:4,7),]
  write.table(df, file = output_file, sep = "\t", quote = FALSE,
              row.names = FALSE, col.names = FALSE)
  return(df)
}

output_file <- "../../inputs/annovar_input/Susceptibles_vector_non_filtered.avinput"
convertToAvinput(Susceptible_vector_protein_VCF, output_file)

output_file2 <- "../../inputs/annovar_input/Resistant_vector_non_filtered.avinput"
convertToAvinput(Resistant_vector_protein_VCF, output_file2)

```

```{bash}
$PWD
```

```{bash}

perl ../../annovar/table_annovar.pl --buildver hg38 --out ../../output/annovar_output/Res_vector_annovar_output --remove --protocol refGene,gnomad41_exome,clinvar_20140902,esp6500siv2_ea,dbnsfp42c --operation g,f,f,f,f --nastring "." --otherinfo --csvout  ../../inputs/annovar_input/Resistant_vector_non_filtered.avinput ../../annovar/humandb

```

```{bash}
perl ../../annovar/table_annovar.pl --buildver hg38 --out ../../output/annovar_output/Sus_vector_annovar_output --remove --protocol refGene,gnomad41_exome,clinvar_20140902,esp6500siv2_ea,dbnsfp42c --operation g,f,f,f,f --nastring "." --otherinfo --csvout  ../../inputs/annovar_input/Susceptibles_vector_non_filtered.avinput ../../annovar/humandb
```

```{r}
setwd('../../output/annovar_output/')
Resistant_vector_cells_annovar_csv=read.csv("Res_vector_annovar_output.hg38_multianno.csv")
Susceptible_vector_cells_annovar_csv=read.csv("Sus_vector_annovar_output.hg38_multianno.csv")
```

```{r}
Resistant_vector_cells_annovar_csv=distinct(Resistant_vector_cells_annovar_csv)
Susceptible_vector_cells_annovar_csv=distinct(Susceptible_vector_cells_annovar_csv)
Susceptible_vector_cells_VCF_nonoverlaps_2[ranges(Susceptible_vector_cells_VCF_nonoverlaps_2)==55611892]
```

```{r}
Resistant_vector_cells_annovar_csv$Otherinfo1[Resistant_vector_cells_annovar_csv$Start==5923202]
Susceptible_vector_cells_annovar_csv$Otherinfo1[Susceptible_vector_cells_annovar_csv$Start==5923202]
```

```{r}
Resistant_vector_cells_annovar_csv=Resistant_vector_cells_annovar_csv[(Resistant_vector_cells_annovar_csv$Func.refGene=="exonic"|Resistant_vector_cells_annovar_csv$Func.refGene=="exonic;splicing"),]

Resistant_vector_cells_annovar_csv=Resistant_vector_cells_annovar_csv[!(Resistant_vector_cells_annovar_csv$ExonicFunc.refGene=="synonymous SNV"|Resistant_vector_cells_annovar_csv$ExonicFunc.refGene=="unknown"|Resistant_vector_cells_annovar_csv$Chr=="chrUn_GL000195v1"),]
```

```{r}
Susceptible_vector_cells_annovar_csv=Susceptible_vector_cells_annovar_csv[(Susceptible_vector_cells_annovar_csv$Func.refGene=="exonic"|Susceptible_vector_cells_annovar_csv$Func.refGene=="exonic;splicing"),]

Susceptible_vector_cells_annovar_csv=Susceptible_vector_cells_annovar_csv[!(Susceptible_vector_cells_annovar_csv$ExonicFunc.refGene=="synonymous SNV"|Susceptible_vector_cells_annovar_csv$ExonicFunc.refGene=="unknown"|Susceptible_vector_cells_annovar_csv$Chr=="chrUn_GL000195v1"),]
```

```{r}
Resistant_vector_cells_annovar_csv$gnomad41_exome_AF=as.numeric(Resistant_vector_cells_annovar_csv$gnomad41_exome_AF)
Susceptible_vector_cells_annovar_csv$gnomad41_exome_AF=as.numeric(Susceptible_vector_cells_annovar_csv$gnomad41_exome_AF)
```

```{r}
intersecting_genes=intersect(Resistant_vector_cells_annovar_csv$Gene.knownGene,Susceptible_vector_cells_annovar_csv$Gene.knownGene)
```

```{r}
#Resistant_vector_cells_annovar_csv=Resistant_vector_cells_annovar_csv[!(Resistant_vector_cells_annovar_csv$Gene.knownGene %in% intersecting_genes),]
```

```{r}
#Susceptible_vector_cells_annovar_csv=Susceptible_vector_cells_annovar_csv[!(Susceptible_vector_cells_annovar_csv$Gene.knownGene %in% intersecting_genes),]
```

```{r}
Resistant_vector_cells_annovar_csv=na.omit(Resistant_vector_cells_annovar_csv[!(Resistant_vector_cells_annovar_csv$gnomad41_exome_AF>0.001),])
Susceptible_vector_cells_annovar_csv=na.omit(Susceptible_vector_cells_annovar_csv[!(Susceptible_vector_cells_annovar_csv$gnomad41_exome_AF>0.001),])

```

```{r}
library(ggplot2)

df <- unique(Resistant_vector_cells_annovar_csv)
df2 = unique(Susceptible_vector_cells_annovar_csv)

# Group by chromosome, count the number of variants, and normalize by dividing by 16
df_summary <- df %>%
  group_by(Chr) %>%
  summarise(Count = n(),Phenotype="resistant") %>%
  mutate(Normalized = Count / 22)

df2_summary <- df2 %>%
  group_by(Chr) %>%
  summarise(Count = n(),Phenotype="susceptible") %>%
  mutate(Normalized = Count / 22)

df_summary=rbind(df_summary,df2_summary)
df_summary$Chr <- gsub("chr", "", df_summary$Chr, ignore.case = TRUE)
#df_summary$Chr <- gsub("^Un_.*|^GL.*|^KI.*", "Unplaced", df_summary$Chr)
#df_summary$Chr = as.factor()


```

```{r}
ggplot(data = df_summary,aes(x=Chr,y=Normalized))+
  geom_bar(stat = "identity",position = "dodge",aes(fill=Phenotype))+
  theme_minimal()+
  labs(title = "Normalized Variant Count by Chromosome",
       x = "Chromosome",
       y = "Normalized Count (per cell line)")+
  theme(axis.text.x = element_text(angle = 45))
  
```

```{r}
ggplot(data = (unique(Resistant_vector_cells_annovar_csv)%>%group_by(Gene.refGene)%>%summarise(Count=n())%>%slice_max(Count,n=20)),aes(x=Gene.refGene,y = Count))+
  geom_bar(stat = "identity",fill = "lightblue",color="black")+
  theme_classic()+
  xlab("Most mutated genes")
```

```{r}
ggplot(data = (unique(Susceptible_vector_cells_annovar_csv)%>%group_by(Gene.refGene)%>%summarise(Count=n())%>%slice_max(Count,n=20)),aes(x=Gene.refGene,y = Count))+
  geom_bar(stat = "identity",fill = "lightblue",color="black")+
  theme_classic()+
  xlab("Most mutated genes")
```

```{r}
unique(Resistant_vector_cells_annovar_csv$Gene.knownGene)
```

```{r}
unique(Susceptible_vector_cells_annovar_csv$Gene.knownGene)

```

```{r}
library(dplyr)
Resistant_vector_cells_annovar_csv_deleterious=unique(Resistant_vector_cells_annovar_csv[Resistant_vector_cells_annovar_csv$SIFT_pred=="D"|Resistant_vector_cells_annovar_csv$PROVEAN_pred=="D",])

unique_genes_per_cell=Resistant_vector_cells_annovar_csv_deleterious%>%dplyr::distinct(Gene.refGene,Otherinfo1)
common_mutations_resistant=unique_genes_per_cell%>%dplyr::group_by(Gene.refGene)%>%dplyr::summarise(common=n())%>%arrange(desc(common))
```

```{r}
Susceptible_vector_cells_annovar_csv_deleterious=unique(Susceptible_vector_cells_annovar_csv[Susceptible_vector_cells_annovar_csv$SIFT_pred=="D"|Susceptible_vector_cells_annovar_csv$PROVEAN_pred=="D",])

unique_genes_per_cell=Susceptible_vector_cells_annovar_csv_deleterious%>%dplyr::distinct(Gene.refGene,Otherinfo1)
common_mutations_susceptible=unique_genes_per_cell%>%dplyr::group_by(Gene.refGene)%>%dplyr::summarise(common=n())%>%arrange(desc(common))
```

```{r}
ggplot(data = common_mutations_susceptible%>%slice_max(common,n=10),aes(x=Gene.refGene,y=common))+
  geom_bar(stat="identity",width= 0.05)+
  geom_point(size=3,colour = "grey")+
  theme_minimal()
```

```{r}
ggplot(data = common_mutations_resistant%>%slice_max(common,n=10),aes(x=Gene.refGene,y=common))+
  geom_bar(stat="identity",width= 0.05)+
  geom_point(size=3,colour = "grey")+
  theme_minimal()
```

```{r}
common_mutations_susceptible[common_mutations_susceptible$Gene.refGene %in%(setdiff(common_mutations_susceptible$Gene.refGene,common_mutations_resistant$Gene.refGene)),]
```

```{r}
ggplot(data = common_mutations_susceptible[common_mutations_susceptible$Gene.refGene %in%(setdiff(common_mutations_susceptible$Gene.refGene,common_mutations_resistant$Gene.refGene)),]%>%slice_max(common,n=12),aes(x=Gene.refGene,y=common))+
  geom_bar(stat="identity",width= 0.5)+
  theme_minimal()
```

```{r}
common_mutations_resistant[common_mutations_resistant$Gene.refGene %in%(setdiff(common_mutations_resistant$Gene.refGene,common_mutations_susceptible$Gene.refGene)),]
```

```{r}
ggplot(data = common_mutations_resistant[common_mutations_resistant$Gene.refGene %in%(setdiff(common_mutations_resistant$Gene.refGene,common_mutations_susceptible$Gene.refGene)),]%>%slice_max(common,n=12),aes(x=Gene.refGene,y=common))+
  geom_bar(stat="identity",width= 0.5)+
  theme_minimal()

```

```{r}
heatmap_df_susceptible=unique(Susceptible_vector_cells_annovar_csv_deleterious)%>%group_by(Otherinfo1,Gene.refGene)%>%summarise(MutationCount=n(),Phenotype="Susceptible",.groups = "drop")

heatmap_df_resistant=unique(Resistant_vector_cells_annovar_csv_deleterious)%>%group_by(Otherinfo1,Gene.refGene)%>%summarise(MutationCount=n(),Phenotype="Resistant",.groups = "drop")
```

```{r}
heatmap_df=rbind(heatmap_df_susceptible,heatmap_df_resistant)
```

```{r}
heatmap_df$Phenotype=factor(heatmap_df$Phenotype,levels = c("Susceptible","Resistant"))
heatmap_df=heatmap_df%>%arrange(Phenotype,Otherinfo1)
cellline_order <- heatmap_df$Otherinfo1
heatmap_df$Otherinfo1=factor(heatmap_df$Otherinfo1,levels = unique(cellline_order))
```

```{r}
heatmap_df$mutation_status=ifelse(heatmap_df$MutationCount>0,1,0)
```

```{r}
ggplot(data = heatmap_df,aes(x=Gene.refGene,y=Otherinfo1,fill=MutationCount))+
  geom_tile()+
  scale_fill_gradient(low = "red", high = "red4")+
  theme(axis.text.x = element_blank())
```

```{r}
library(tidyr)
heatmap_df_2=heatmap_df%>%distinct(Otherinfo1,Gene.refGene)%>%mutate(Mutation=1)%>%pivot_wider(names_from = Otherinfo1, values_from = Mutation, values_fill = list(Mutation = 0))

binary_long <- pivot_longer(heatmap_df_2, 
                            cols = -Gene.refGene, 
                            names_to = "CellLine", 
                            values_to = "Mutation")
```

```{r}
ggplot(data = binary_long,aes(x=Gene.refGene,y=CellLine,fill =(Mutation)))+
  geom_tile()+
  scale_fill_gradient(low = "white", high = "red")+
  theme(axis.text.x = element_blank())
```

```{r}
setwd('../')
Resistant_vector_unique_deleterious=Resistant_vector_cells_annovar_csv_deleterious$Gene.refGene[!Resistant_vector_cells_annovar_csv_deleterious$Gene.refGene%in%Susceptible_vector_cells_annovar_csv_deleterious$Gene.refGene]

sink("list for gene ontology.txt",)
cat(paste(Resistant_vector_unique_deleterious,collapse = '\n'))
sink()
```
