---
title: "Plink eQTL"
format: html
editor: visual
---

```{r}
#install.packages('qqman')
#BiocManager::install("clusterProfiler",)
#BiocManager::install("org.Hs.eg.db")
#install.packages("ggplotify")
#install.packages("pheatmap")
library(ggplotify)
library(ggplot2)
library(qqman)
library(data.table)
library(dplyr)
library(tidyr)
library(data.table)
library(readr)
library(pheatmap)
library(gprofiler2)
library(stringr)
library(org.Hs.eg.db)
library(clusterProfiler)


```

```{r}
RNA_list=list.files("../../inputs/Neo_RNA-seq/",full.names = T)

RNA_csv_list=list()

for (i in RNA_list){
cell_name=gsub(pattern = "counts.*.csv",replacement = "",basename(i))
csv_file=read.csv(i)
colnames(csv_file)[3]=cell_name
RNA_csv_list[[cell_name]]=csv_file
rm(csv_file)
}

RNA_csv=Reduce(function(x,y) merge(x,y,all=T),RNA_csv_list)

for (i in 4:length(RNA_csv)){
colnames(RNA_csv)[i]=gsub(pattern = "_P.*",replacement = "",colnames(RNA_csv)[i])
colnames(RNA_csv)=toupper(colnames(RNA_csv))
}

colnames(RNA_csv)=sub("\\.\\d+$","",colnames(RNA_csv))

```

```{r}
df=RNA_csv[,4:length(RNA_csv)]
colnames(df)=sub("\\.\\d+$","",colnames(df))



df=lapply(split.default(df,unique(colnames(df)))
,function(x) rowMeans(x,))


df= do.call(cbind,args = df)
RNA_csv=cbind(RNA_csv[,c(1:3)],df)
```

```{r}
RPKM=((RNA_csv[,c(4:length(RNA_csv))]*1000)/(RNA_csv[,2]))

TPM_eQTL=data_frame(RPKM)
for (i in 1:ncol(RPKM)){
TPM_eQTL[,i]=log2((RPKM[,i]*(1/sum(RPKM[,i]))*1000000)+1)
}

TPM_eQTL=TPM_eQTL[!colnames(TPM_eQTL)%in%c("MOMT_2","OTAM_2","WOTS_2")]
TPM_eQTL=cbind(RNA_csv$GENEID,TPM_eQTL)
TPM_eQTL=TPM_eQTL%>%rename("GENEID"="RNA_csv$GENEID")
```

```{r}
gene_list=c(100506013,10912,1178,125965,164668,1848,1947,1999,25797,3400,401491,8224,8511,89932,100507428,101927230,1271,1277,220323,221044,221833,2296,2637,27287,283731,3166,3620,375567,407028,442895,442896,4838,5015,50805,5154,57597,57611,58473,6374,64284,6899,7139,7409,81621,8324,8433,84629,8490,8870,91461,93010)

```

```{r}
TPM_eQTL=TPM_eQTL[TPM_eQTL$GENEID%in%gene_list,]
```

```{r}
row.names(TPM_eQTL)=TPM_eQTL$GENEID
TPM_eQTL=TPM_eQTL[,-1]
TPM_eQTL_transposed=t(TPM_eQTL)
```

```{r}
write.table(TPM_eQTL_transposed,"Plink_eQTL_phenotype.txt",quote = F,sep = "\t",row.names = T,col.names = T)
```

```{r}
plink_eqtl=list.files("../../output/eQTL/plink_eqtl_output/",full.names = T)

plink_eqtl_df=list()

for (i in plink_eqtl){
  df=read_tsv(i)
  df=df[!is.na(df$P),]
  df$GeneID=str_sub(start = 18,string = basename(i))
  df$GeneID=gsub("\\.glm\\.linear",replacement = "",df$GeneID)
  ID=df$GeneID[1]
  df$q=p.adjust(df$P,"fdr")
  df=df[df$q<0.05,]
  plink_eqtl_df[[ID]]=df
  rm(df)
}

#plink_eqtl_csv=as.data.frame(rbind(plink_eqtl_df))

#plink_eqtl_csv$GeneSymbol=mapIds(
    #x         = org.Hs.eg.db,
    #keys      = plink_eqtl_csv$GeneID,
    #column    = "SYMBOL",      # what you want back
    #keytype   = "ENTREZID",    # what your current IDs are
    #multiVals = "first")
```

```{r}
as.data.frame(rbind(plink_eqtl_csv))
```

```{r}
setwd('../../output/annovar_output/')

plink_total_annovar_virus=read.csv('Total_cell_line_anno3.hg38_multianno.csv') %>%  dplyr::rename(
CHROM = Chr,
POS   = Start,
REF   = Ref,
ALT   = Alt ) %>% dplyr::select(CHROM, POS, REF, ALT, everything())


```

```{r}
getwd() 
total_Regenie_virus=fread('../../output/VCF/Regenie/Virus/re_assoc_virus_PHENO.regenie')
total_Regenie_virus$P=10^-(total_Regenie_virus$LOG10P)
total_Regenie_virus=total_Regenie_virus%>%dplyr::select(!c(EXTRA)) %>%
  dplyr::rename(
    "POS"= GENPOS,
    "REF"= ALLELE0,
    "ALT"= ALLELE1
  )
#total_Regenie_virus$Q=p.adjust(total_Regenie_virus$P, method ="holm")
```

```{r}
getwd()
total_Plink_virus_incRNA=fread('../../output/VCF/Plink_output/virus/total_cell_line/filtered_total_virus_assoc_results.PC1.glm.linear')

total_Plink_virus_incRNA=total_Plink_virus_incRNA[!is.na(total_Plink_virus_incRNA$P),]

#total_Plink_virus$Q=p.adjust(total_Plink_virus$P,"fdr")

```

```{r}
getwd() 
total_Regenie_vector_incRNA=fread('../../output/VCF/Regenie/Vector/re_assoc_vector_PHENO.regenie')
total_Regenie_vector_incRNA$P=10^-(total_Regenie_vector_incRNA$LOG10P)
total_Regenie_vector_incRNA=total_Regenie_vector_incRNA%>%dplyr::select(!c(EXTRA)) %>%
  dplyr::rename(
    "POS"= GENPOS,
    "REF"= ALLELE0,
    "ALT"= ALLELE1
  )
#total_Regenie_vector$Q=p.adjust(total_Regenie_vector$P, method ="holm")
```

```{r}
getwd()
total_Plink_vector_incRNA=fread('../../output/VCF/Plink_output/vector/Total_cell_line/filtered_total_vector_assoc_results.PC1.glm.linear')

total_Plink_vector_incRNA=total_Plink_vector_incRNA[!is.na(total_Plink_vector_incRNA$P),]
#total_Plink_vector$Q=p.adjust(total_Plink_vector$P,"fdr")

```

```{r}
plink_eQTL_with_phenotype=lapply(plink_eqtl_df,function(x,y) merge.data.frame(x,total_Regenie_vector_incRNA,by.x = "ID",by.y ="ID"))
```

```{r}
setwd('../../output/')
genos_vector_wide <- fread("genotypes.withheader.tsv",sep ="\t",header = T )
colnames(genos_vector_wide) <- c("CHROM","POS","REF","ALT", colnames(genos_vector_wide)[5:ncol(genos_vector_wide)])
genos_vector_wide=tibble(genos_vector_wide)
```

```{r}

genos_vector_wide2=genos_vector_wide[,colnames(genos_vector_wide)[colnames(genos_vector_wide)%in%c(colnames(TPM_eQTL),"CHROM","POS","REF","ALT")]]

#genos_vector_wide=genos_vector_wide[,]
```

```{r}
genos_vector_wide2$CHROM=sub("chr","",genos_vector_wide2$CHROM)


```

IDO-1 3620 expression correlated with FNDC which some of which are significantly associated with virus

```{r}
genos_vector_wide2$ID=paste(genos_vector_wide2$CHROM,genos_vector_wide2$POS,genos_vector_wide2$REF,genos_vector_wide2$ALT,sep = ":")
```

```{r}
genos_vector_wide2=genos_vector_wide2[,-(1:4)]
```

```{r}
genos_vector_wide2=genos_vector_wide2%>%mutate(across(.cols =1:54,~ case_when(.=="1/1"~2,.=="0/1"~1,.=="0/0"~0,.default = 0)))


```

```{r}
plink_eQTL_with_genotype=lapply(plink_eQTL_with_phenotype,function(x,y) merge.data.frame(x,genos_vector_wide2,by.x = "ID",by.y ="ID"))
```

```{r}

```
